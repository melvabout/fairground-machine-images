---
 - hosts: all
   gather_facts: false

   tasks:
    - name: Enable Root Login
      ansible.builtin.lineinfile:
        dest: /etc/ssh/sshd_config
        regexp: '^PermitRootLogin'
        line: "PermitRootLogin yes"
        state: present
        backup: yes
      become: true
      notify:
        - restart ssh
    
    - name: Create ssh directory
      become: true  
      become_user: root
      ansible.builtin.file:
        path: /root/.ssh
        state: directory
    
    - name: Write authorized_keys
      become: true  
      become_user: root
      ansible.builtin.shell:
        cmd: cat /tmp/id_rsa.pub >>  /root/.ssh/authorized_keys

    - name: hostnamectl set static hostname
      become: true
      become_user: root
      ansible.builtin.shell:
        cmd: hostnamectl set-hostname --static {{ node_name }}

    - name: Preserve Hostname
      become: true
      become_user: root
      ansible.builtin.replace:
        path: /etc/cloud/cloud.cfg
        regexp: 'preserve_hostname: false'
        replace: 'preserve_hostname: true'

    - name: Set FQDN of hostname
      become: true
      become_user: root
      ansible.builtin.replace:
        path: /etc/hosts
        regexp: '127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4'
        replace: '127.0.0.1   {{ node_name }}.kubernetes.local {{ node_name }} localhost4 localhost4.localdomain4'

    - name: Copy populate hosts
      become: true
      become_user: root
      ansible.builtin.copy:
        src: /tmp/populate_hosts.py
        dest: ~/populate_hosts.py

    - name: Copy admin.kubeconfig
      become: true
      become_user: root
      ansible.builtin.copy:
        src: /tmp/admin.kubeconfig
        dest: ~/admin.kubeconfig

    - name: Install ssm agent
      become: true
      become_user: root
      ansible.builtin.shell:
        cmd: sudo dnf install -y https://s3.amazonaws.com/ec2-downloads-windows/SSMAgent/latest/linux_amd64/amazon-ssm-agent.rpm
      notify:
        - start ssm agent

    - name: Download etcd zip
      ansible.builtin.uri: 
        url: https://storage.googleapis.com/etcd/{{ etcd_version }}/etcd-{{ etcd_version }}-linux-amd64.tar.gz
        dest: /tmp/etcd-{{ etcd_version }}-linux-amd64.tar.gz

    - name: Make tmp etcd dir
      ansible.builtin.file: 
        state: directory
        path: /tmp/etcd-{{ etcd_version }}-linux-amd64

    - name: Unzip etcd
      ansible.builtin.unarchive:
        src: /tmp/etcd-{{ etcd_version }}-linux-amd64.tar.gz
        dest: /tmp/

    - name: Make etcd folder
      become: true
      become_user: root
      ansible.builtin.file: 
        state: directory
        path: /etc/etcd

    - name: Make etcd lib
      become: true
      become_user: root
      ansible.builtin.file: 
        state: directory
        path: /var/lib/etcd
        mode: 700
        owner: root

    - name: move etcd bin files
      become: true
      become_user: root
      ansible.builtin.copy:
        src: "{{ item }}"
        dest: /usr/bin/
        mode: u=rx,g=rx,o=rwx
      with_fileglob:
        - "/tmp/etcd-{{ etcd_version }}-linux-amd64/etcd*"

    - name: move etcd etc files
      become: true
      become_user: root
      ansible.builtin.copy:
        src: /tmp/etcd/
        dest: /etc/etcd/

    - name: Download kube-apiserver
      become: true
      become_user: root
      ansible.builtin.uri: 
        url: https://storage.googleapis.com/kubernetes-release/release/{{ kubernetes_version }}/bin/linux/amd64/kube-apiserver
        dest: /usr/bin/kube-apiserver
        mode: u=rx,g=rx,o=rwx

    - name: Download kube-controller-manager
      become: true
      become_user: root
      ansible.builtin.uri: 
        url: https://storage.googleapis.com/kubernetes-release/release/{{ kubernetes_version }}/bin/linux/amd64/kube-controller-manager
        dest: /usr/bin/kube-controller-manager
        mode: u=rx,g=rx,o=rwx

    - name: Download kube-scheduler
      become: true
      become_user: root
      ansible.builtin.uri: 
        url: https://storage.googleapis.com/kubernetes-release/release/{{ kubernetes_version }}/bin/linux/amd64/kube-scheduler
        dest: /usr/bin/kube-scheduler
        mode: u=rx,g=rx,o=rwx

    - name: Download kubectl
      become: true
      become_user: root
      ansible.builtin.uri: 
        url: https://storage.googleapis.com/kubernetes-release/release/{{ kubernetes_version }}/bin/linux/amd64/kubectl
        dest: /usr/bin/kubectl
        mode: u=rx,g=rx,o=rwx

    - name: move kubernetes lib files
      become: true
      become_user: root
      ansible.builtin.copy:
        src: /tmp/kubernetes/
        dest: /var/lib/kubernetes/
        mode: 700
        owner: root

    - name: move kubernetes lib files from tmp etcd
      become: true
      become_user: root
      ansible.builtin.copy:
        src: /tmp/etcd/
        dest: /var/lib/kubernetes/
        mode: 700
        owner: root

    - name: move service files
      become: true
      become_user: root
      ansible.builtin.copy:
        src: /tmp/server-service/
        dest: /etc/systemd/system/
        mode: 644
        owner: root

    - name: Create kubernetes config dir
      become: true
      become_user: root
      ansible.builtin.file:
        state: directory
        path: /etc/kubernetes/config/
        mode: 700
        owner: root
        recurse: true

    - name: move kube-scheduler.yaml
      become: true
      become_user: root
      ansible.builtin.copy:
        src: /tmp/kube-scheduler.yaml
        dest: /etc/kubernetes/config/kube-scheduler.yaml
        mode: 644
        owner: root

    - name: Copy start_control_plane_services.sh
      become: true
      become_user: root
      ansible.builtin.copy:
        src: /tmp/start_control_plane_services.sh
        dest: ~/start_control_plane_services.sh
        mode: u+rwx

   handlers:
    - name: restart ssh
      become: true
      become_user: root
      ansible.builtin.systemd:
        name: sshd
        state: restarted
    
    - name: start ssm agent
      become: true
      become_user: root
      ansible.builtin.systemd:
        name: amazon-ssm-agent
        state: started
    